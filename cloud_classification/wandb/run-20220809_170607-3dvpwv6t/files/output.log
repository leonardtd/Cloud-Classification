
STARTING TRAINING: experiment 1
  0%|                                                                                                                                              | 0/250 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/train.py", line 93, in <module>
    train(CONFIG_FILENAME,
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/train.py", line 66, in train
    model, data_logger = trainer.train()
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/src/model.py", line 65, in train
    train_loss, train_acc, train_targets, train_predictions, train_density = utils.train_model(
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/src/utils.py", line 199, in train_model
    logits_main_head, logits_second_head, density = model(data["images"])
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/src/modules/graph_modules.py", line 160, in forward
    deep_features = self.cnn(x)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/leo/Cloud-Classification/cloud_classification/src/modules/conv_modules.py", line 18, in forward
    return self.cnn(x).view(-1,2048)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py", line 144, in forward
    out = self.conv1(x)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 447, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/ltorres/miniconda3/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 443, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: CUDA out of memory. Tried to allocate 160.00 MiB (GPU 3; 10.76 GiB total capacity; 6.31 GiB already allocated; 154.94 MiB free; 6.33 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF